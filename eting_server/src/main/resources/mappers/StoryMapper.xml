<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gif.eting.dao.StoryMapper">

<!-- 
		SELECT
			  story_id
			  ,content
			  ,phone_id
			  ,story_date
		FROM story_master
		WHERE phone_id = #{phone_id}
		ORDER by story_date desc
		 -->
		 
	<select id="getStoryList" parameterType="storyDTO" resultType="storyDTO">		
	    SELECT
		  story_master.story_id
		  ,content
		  ,phone_id
		  ,story_date
		  ,story_time		  
		  ,stamp_master.stamp_name
		FROM story_master
	    LEFT OUTER JOIN story_stamp_mapping
	    ON story_master.story_id = story_stamp_mapping.story_id
	    LEFT OUTER JOIN stamp_master
	    ON story_stamp_mapping.stamp_id = stamp_master.stamp_id    
		WHERE phone_id = #{phone_id}
		ORDER by story_date, story_time asc
	</select>
	
	<insert id="insStory" parameterType="storyDTO"
	useGeneratedKeys="true" keyProperty="story_id">
	INSERT INTO
	story_master
		(content, phone_id, story_date, story_time)
	VALUES
		(#{content}, #{phone_id}, curdate(), curtime())
	</insert>

	<update id="updStory" parameterType="storyDTO">
		UPDATE story_master 
		<set>
			<if test="exp_type != null">content= #{content},</if>
		</set>
		WHERE story_id = #{story_id}
	</update>

	<delete id="delStory" parameterType="storyDTO">
		DELETE FROM story_master
		WHERE story_id = #{story_id}
	</delete>
	
	<!-- 이야기 대기열에 이야기를 넣는다 -->
	<insert id="insStoryQueue" parameterType="storyDTO">
	INSERT INTO story_queue
		(story_id, phone_id) 
	VALUES 
		(#{story_id}, #{phone_id})
	</insert>
	
	<!-- 자신이 쓰지 않은 이야기를 받아오기 -->
	<select id="getStoryFromQueue" parameterType="storyDTO" resultType="storyDTO">
		SELECT
			story_id
			,content
			,story_date
			,story_time
		FROM story_queue
		NATURAL JOIN story_master
		WHERE phone_id != #{phone_id}
		AND phone_id not in (select phone_id  
									from story_report 
									group by phone_id 
									having count(phone_id) >= 3)
		ORDER by rand()
		LIMIT 1
	</select>
	
	<!-- 대기열에서 받아온 이야기를 대기열에서 지우기 -->
	<delete id="delStoryFromQueue" parameterType="storyDTO">
		DELETE FROM story_queue
		WHERE story_id = #{story_id}
	</delete>
	
	<!-- 받은이야기함에 넣는다. -->
	<insert id="insRecievedStory" parameterType="storyDTO">
	INSERT INTO recieved_story
		(story_id, phone_id) 
	VALUES 
		(#{story_id}, #{phone_id})
	</insert>
	
	<!-- 받은이야기함에서 읽지않은 이야기를 받아오기 -->
	<select id="getStoryFromRecieved" parameterType="storyDTO" resultType="storyDTO">	
		SELECT 
			recieved_story.story_id, 
			story_master.content, 
			story_master.story_date, 
			story_master.story_time 
		FROM recieved_story INNER JOIN story_master 
		ON  recieved_story.story_id = story_master.story_id  
		WHERE recieved_story.phone_id = #{phone_id}
		ORDER BY recieved_story.story_id desc
		LIMIT 5
	</select>
	
	<!-- 스탬프 불러오기 -->
	<select id="getStamp" parameterType="String" resultType="stampDTO">	
		SELECT 
			stamp_id
			,stamp_name
			,stamp_url
			,stamp_type
			,stamp_order
		FROM stamp_master
		<if test="stamp_id != null">
			<![CDATA[
			WHERE stamp_id > #{stamp_id}
			]]>
		</if>
	</select>
	
	<!-- 스탬프저장 -->
	<insert id="insStampToStory" parameterType="stampDTO">
	INSERT INTO
	story_stamp_mapping
		(story_id, stamps, story_comment)
	VALUES
		(#{story_id}, #{stamps}, #{comment})
	</insert>
	
	<!-- 스탬프찍은 이야기를 받은이야기함에서 지우기 -->
	<delete id="delStoryFromRecieved" parameterType="stampDTO">
		DELETE FROM recieved_story
		WHERE story_id = #{story_id}
	</delete>

	<!-- 스토리에 해당하는 스탬프 불러오기 -->
	<select id="getStampByStory" parameterType="String" resultType="stampDTO">
		SELECT
			story_stamp_mapping.stamp_id
			,stamp_master.stamp_name
			,story_stamp_mapping.sender
		FROM story_stamp_mapping
		LEFT OUTER JOIN stamp_master
		ON story_stamp_mapping.stamp_id =
			stamp_master.stamp_id
		WHERE story_stamp_mapping.story_id = #{story_id}
	</select>
	
	<!-- 스탬프가 찍힌 이야기 아이디만 불러온다. -->
	<select id="getStampedStoryByPhoneId" parameterType="String" resultType="String">
		SELECT
			story_stamp_mapping.story_id
		FROM story_stamp_mapping
		LEFT OUTER JOIN story_master
		ON story_stamp_mapping.story_id =
			story_master.story_id
		WHERE story_master.phone_id = #{phone_id}		
	</select>
	
	<!-- 폰 고유번호 저장 -->
	<insert id="insPhoneRegistration" parameterType="phoneDto">
		INSERT INTO
		phone_registration
			(phone_id, reg_id)
		VALUES
			(#{phone_id}, #{reg_id})
	</insert>
	
	<!-- 폰 고유번호 불러오기 -->
	<select id="getPhoneRegistration" parameterType="String" resultType="String">
		SELECT
		  reg_id
		FROM
		  phone_registration
		  natural join story_master
		WHERE
		  story_id=#{story_id} 		
	</select>
	
	<!-- 이야기 신고기능 -->
	<insert id="insStoryReport" parameterType="phoneDto">
		INSERT INTO
		story_report
			(story_id, phone_id)
		VALUES
			(#{story_id}, (select phone_id
			from story_master
			where story_id = #{story_id}))
	</insert>
	
	<!-- 등록된 폰 전부 불러오기 -->
	<select id="getPhoneRegistrationList" parameterType="String" resultType="phoneDto">
		SELECT
			phone_id
			,reg_id
		FROM
		  phone_registration 		
	</select>
	
	
</mapper>